{"mappings":"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","sources":["<anon>","node_modules/.pnpm/three@0.160.1/node_modules/three/examples/jsm/libs/stats.module.js","examples/distortHighMap.js"],"sourcesContent":["import \"./buildingAnimation.5423aa82.js\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire1149\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire1149\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"82VHk\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $5dbb4439cfbde5f7$export$2e2bcd8739ae039);\nvar $5dbb4439cfbde5f7$var$Stats = function() {\n    var mode = 0;\n    var container = document.createElement('div');\n    container.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n    container.addEventListener('click', function(event) {\n        event.preventDefault();\n        showPanel(++mode % container.children.length);\n    }, false);\n    //\n    function addPanel(panel) {\n        container.appendChild(panel.dom);\n        return panel;\n    }\n    function showPanel(id) {\n        for(var i = 0; i < container.children.length; i++)container.children[i].style.display = i === id ? 'block' : 'none';\n        mode = id;\n    }\n    //\n    var beginTime = (performance || Date).now(), prevTime = beginTime, frames = 0;\n    var fpsPanel = addPanel(new $5dbb4439cfbde5f7$var$Stats.Panel('FPS', '#0ff', '#002'));\n    var msPanel = addPanel(new $5dbb4439cfbde5f7$var$Stats.Panel('MS', '#0f0', '#020'));\n    if (self.performance && self.performance.memory) var memPanel = addPanel(new $5dbb4439cfbde5f7$var$Stats.Panel('MB', '#f08', '#201'));\n    showPanel(0);\n    return {\n        REVISION: 16,\n        dom: container,\n        addPanel: addPanel,\n        showPanel: showPanel,\n        begin: function() {\n            beginTime = (performance || Date).now();\n        },\n        end: function() {\n            frames++;\n            var time = (performance || Date).now();\n            msPanel.update(time - beginTime, 200);\n            if (time >= prevTime + 1000) {\n                fpsPanel.update(frames * 1000 / (time - prevTime), 100);\n                prevTime = time;\n                frames = 0;\n                if (memPanel) {\n                    var memory = performance.memory;\n                    memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n                }\n            }\n            return time;\n        },\n        update: function() {\n            beginTime = this.end();\n        },\n        // Backwards Compatibility\n        domElement: container,\n        setMode: showPanel\n    };\n};\n$5dbb4439cfbde5f7$var$Stats.Panel = function(name, fg, bg) {\n    var min = Infinity, max = 0, round = Math.round;\n    var PR = round(window.devicePixelRatio || 1);\n    var WIDTH = 80 * PR, HEIGHT = 48 * PR, TEXT_X = 3 * PR, TEXT_Y = 2 * PR, GRAPH_X = 3 * PR, GRAPH_Y = 15 * PR, GRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n    var canvas = document.createElement('canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    canvas.style.cssText = 'width:80px;height:48px';\n    var context = canvas.getContext('2d');\n    context.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif';\n    context.textBaseline = 'top';\n    context.fillStyle = bg;\n    context.fillRect(0, 0, WIDTH, HEIGHT);\n    context.fillStyle = fg;\n    context.fillText(name, TEXT_X, TEXT_Y);\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n    context.fillStyle = bg;\n    context.globalAlpha = 0.9;\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n    return {\n        dom: canvas,\n        update: function(value, maxValue) {\n            min = Math.min(min, value);\n            max = Math.max(max, value);\n            context.fillStyle = bg;\n            context.globalAlpha = 1;\n            context.fillRect(0, 0, WIDTH, GRAPH_Y);\n            context.fillStyle = fg;\n            context.fillText(round(value) + ' ' + name + ' (' + round(min) + '-' + round(max) + ')', TEXT_X, TEXT_Y);\n            context.drawImage(canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT);\n            context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n            context.fillStyle = bg;\n            context.globalAlpha = 0.9;\n            context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round((1 - value / maxValue) * GRAPH_HEIGHT));\n        }\n    };\n};\nvar $5dbb4439cfbde5f7$export$2e2bcd8739ae039 = $5dbb4439cfbde5f7$var$Stats;\n\n});\n\n\nvar $jw0R5 = parcelRequire(\"jw0R5\");\n\nvar $2sw9m = parcelRequire(\"2sw9m\");\n\nvar $7DqNw = parcelRequire(\"7DqNw\");\n\nvar $82VHk = parcelRequire(\"82VHk\");\n\nvar $2Tb7o = parcelRequire(\"2Tb7o\");\nconst $e6cd41b7816fa07a$var$assetUrl = (0, $2Tb7o.getAssetURL)();\nlet $e6cd41b7816fa07a$var$options = {\n    radius: 100,\n    segments: 640,\n    factor: 5,\n    map: $e6cd41b7816fa07a$var$assetUrl + \"textures/8081_earthmap4k.jpg\",\n    bump: $e6cd41b7816fa07a$var$assetUrl + \"textures/8081_earthbump4k.jpg\"\n};\nconst $e6cd41b7816fa07a$var$BG_COLOR = 0x111111;\nconst $e6cd41b7816fa07a$var$FRAME_INTERVAL = 1 / 30;\nlet $e6cd41b7816fa07a$var$dt = 0;\nlet $e6cd41b7816fa07a$var$renderer;\nlet $e6cd41b7816fa07a$var$camera, $e6cd41b7816fa07a$var$controller;\nlet $e6cd41b7816fa07a$var$scene;\nlet $e6cd41b7816fa07a$var$loader;\nlet $e6cd41b7816fa07a$var$geometry, $e6cd41b7816fa07a$var$material, $e6cd41b7816fa07a$var$mesh;\nlet $e6cd41b7816fa07a$var$clock, $e6cd41b7816fa07a$var$stats, $e6cd41b7816fa07a$var$gui;\n$e6cd41b7816fa07a$var$init();\n$e6cd41b7816fa07a$var$render();\nfunction $e6cd41b7816fa07a$var$initThree() {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    $e6cd41b7816fa07a$var$renderer = new $jw0R5.WebGLRenderer({\n        antialias: true\n    });\n    $e6cd41b7816fa07a$var$renderer.setSize(width, height);\n    $e6cd41b7816fa07a$var$renderer.setClearColor($e6cd41b7816fa07a$var$BG_COLOR, 1);\n    document.body.appendChild($e6cd41b7816fa07a$var$renderer.domElement);\n    let near = 0.1;\n    let far = 10000;\n    $e6cd41b7816fa07a$var$camera = new $jw0R5.PerspectiveCamera(80, width / height, near, far);\n    $e6cd41b7816fa07a$var$camera.position.set(0, 200, 0);\n    $e6cd41b7816fa07a$var$camera.up.set(0, 1, 0);\n    $e6cd41b7816fa07a$var$controller = new (0, $2sw9m.OrbitControls)($e6cd41b7816fa07a$var$camera, $e6cd41b7816fa07a$var$renderer.domElement);\n    $e6cd41b7816fa07a$var$controller.target = new $jw0R5.Vector3(0, 0, 0);\n    $e6cd41b7816fa07a$var$loader = new $jw0R5.TextureLoader();\n    $e6cd41b7816fa07a$var$gui = new (0, $7DqNw.GUI)();\n    $e6cd41b7816fa07a$var$gui.add($e6cd41b7816fa07a$var$options, 'factor', 0, 50).onChange((e)=>{\n        $e6cd41b7816fa07a$var$material.uniforms.u_factor.value = e;\n    });\n    $e6cd41b7816fa07a$var$clock = new $jw0R5.Clock();\n    $e6cd41b7816fa07a$var$stats = new (0, $82VHk.default)();\n    document.body.appendChild($e6cd41b7816fa07a$var$stats.dom);\n    window.addEventListener('resize', (e)=>{\n        let windwoWidth = window.innerWidth;\n        let windowHeight = window.innerHeight;\n        $e6cd41b7816fa07a$var$camera.aspect = windwoWidth / windowHeight;\n        $e6cd41b7816fa07a$var$camera.updateProjectionMatrix();\n        $e6cd41b7816fa07a$var$renderer.setSize(windwoWidth, windowHeight);\n    });\n}\nfunction $e6cd41b7816fa07a$var$initScene() {\n    $e6cd41b7816fa07a$var$scene = new $jw0R5.Scene();\n    let ambientLight = new $jw0R5.AmbientLight(0xfefefe);\n    let directionLight = new $jw0R5.DirectionalLight(0xffffff);\n    directionLight.position.set(0, 5, 0);\n    directionLight.intensity = 2;\n    $e6cd41b7816fa07a$var$scene.add(ambientLight);\n    $e6cd41b7816fa07a$var$scene.add(directionLight);\n    const earthShader = {\n        vertexShader: /* glsl */ `\n                    varying vec4 v_color;\n                    varying vec2 v_uv;\n                    uniform float u_factor;\n                    uniform float u_radius;\n                    uniform sampler2D u_bump;\n                    void main() {\n                        v_color = texture2D(u_bump, uv);\n                        v_uv = uv;\n                        float height = v_color.r * u_factor;\n                        float scale = (u_radius + height) / u_radius;\n                        vec3 vposition = position * scale;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4(vposition, 1.0); \n                    }\n                `,\n        fragmentShader: /* glsl */ `\n                    uniform vec3 u_color;\n                    varying vec2 v_uv;\n                    uniform sampler2D u_map;\n                    void main() {\n                        gl_FragColor = vec4(u_color, 1.0) * texture2D(u_map, v_uv);\n                    }\n            `\n    };\n    $e6cd41b7816fa07a$var$geometry = new $jw0R5.SphereGeometry($e6cd41b7816fa07a$var$options.radius, $e6cd41b7816fa07a$var$options.segments, $e6cd41b7816fa07a$var$options.segments);\n    $e6cd41b7816fa07a$var$material = new $jw0R5.ShaderMaterial({\n        uniforms: {\n            u_radius: {\n                value: $e6cd41b7816fa07a$var$options.radius\n            },\n            u_factor: {\n                type: 'f',\n                value: $e6cd41b7816fa07a$var$options.factor\n            },\n            u_map: {\n                value: $e6cd41b7816fa07a$var$loader.load($e6cd41b7816fa07a$var$options.map)\n            },\n            u_bump: {\n                value: $e6cd41b7816fa07a$var$loader.load($e6cd41b7816fa07a$var$options.bump)\n            },\n            u_color: {\n                value: new $jw0R5.Color('rgb(255, 255, 255)')\n            }\n        },\n        transparent: true,\n        vertexShader: earthShader.vertexShader,\n        fragmentShader: earthShader.fragmentShader\n    });\n    $e6cd41b7816fa07a$var$mesh = new $jw0R5.Mesh($e6cd41b7816fa07a$var$geometry, $e6cd41b7816fa07a$var$material);\n    $e6cd41b7816fa07a$var$scene.add($e6cd41b7816fa07a$var$mesh);\n}\nfunction $e6cd41b7816fa07a$var$render() {\n    requestAnimationFrame($e6cd41b7816fa07a$var$render);\n    let time = $e6cd41b7816fa07a$var$clock.getDelta();\n    const delta = Math.min(time, $e6cd41b7816fa07a$var$FRAME_INTERVAL);\n    $e6cd41b7816fa07a$var$dt += time;\n    if ($e6cd41b7816fa07a$var$dt > $e6cd41b7816fa07a$var$FRAME_INTERVAL) {\n        $e6cd41b7816fa07a$var$controller.update();\n        $e6cd41b7816fa07a$var$stats.update();\n        $e6cd41b7816fa07a$var$renderer.render($e6cd41b7816fa07a$var$scene, $e6cd41b7816fa07a$var$camera);\n    }\n    $e6cd41b7816fa07a$var$dt %= $e6cd41b7816fa07a$var$FRAME_INTERVAL;\n}\nfunction $e6cd41b7816fa07a$var$init() {\n    $e6cd41b7816fa07a$var$initThree();\n    $e6cd41b7816fa07a$var$initScene();\n}\n\n\n//# sourceMappingURL=distortHighMap.6a5f9787.js.map\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\nimport { getAssetURL } from '/extend/tools/index.js'\n\nconst assetUrl = getAssetURL();\n\nlet options = {\n    radius: 100,\n    segments: 640,\n    factor: 5,\n    map: assetUrl + \"textures/8081_earthmap4k.jpg\",\n    bump: assetUrl + \"textures/8081_earthbump4k.jpg\"\n};\n\nconst BG_COLOR = 0x111111;\nconst FRAME_INTERVAL = 1 / 30;\nlet dt = 0;\n\nlet renderer;\nlet camera, controller;\nlet scene;\nlet loader;\nlet geometry, material, mesh;\nlet clock, stats, gui;\n\ninit();\nrender();\n\nfunction initThree() {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    renderer = new THREE.WebGLRenderer({\n        antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setClearColor(BG_COLOR, 1);\n    document.body.appendChild(renderer.domElement);\n\n    let near = 0.1;\n    let far = 10000;\n    camera = new THREE.PerspectiveCamera(80, width / height, near, far);\n    camera.position.set(0, 200, 0);\n    camera.up.set(0, 1, 0);\n    controller = new OrbitControls(camera, renderer.domElement);\n    controller.target = new THREE.Vector3(0, 0, 0);\n\n    loader = new THREE.TextureLoader();\n\n    gui = new GUI();\n    gui.add(options, 'factor', 0, 50).onChange(e => {\n        material.uniforms.u_factor.value = e;\n    });\n\n    clock = new THREE.Clock();\n    stats = new Stats();\n    document.body.appendChild(stats.dom);\n\n    window.addEventListener('resize', e => {\n\n        let windwoWidth = window.innerWidth;\n        let windowHeight = window.innerHeight;\n        camera.aspect = windwoWidth / windowHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(windwoWidth, windowHeight);\n    });\n}\n\nfunction initScene() {\n    scene = new THREE.Scene();\n\n    let ambientLight = new THREE.AmbientLight(0xfefefe);\n    let directionLight = new THREE.DirectionalLight(0xffffff);\n    directionLight.position.set(0, 5, 0);\n    directionLight.intensity = 2;\n    scene.add(ambientLight);\n    scene.add(directionLight);\n\n    const earthShader = {\n        vertexShader: /* glsl */ `\n                    varying vec4 v_color;\n                    varying vec2 v_uv;\n                    uniform float u_factor;\n                    uniform float u_radius;\n                    uniform sampler2D u_bump;\n                    void main() {\n                        v_color = texture2D(u_bump, uv);\n                        v_uv = uv;\n                        float height = v_color.r * u_factor;\n                        float scale = (u_radius + height) / u_radius;\n                        vec3 vposition = position * scale;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4(vposition, 1.0); \n                    }\n                `,\n        fragmentShader: /* glsl */ `\n                    uniform vec3 u_color;\n                    varying vec2 v_uv;\n                    uniform sampler2D u_map;\n                    void main() {\n                        gl_FragColor = vec4(u_color, 1.0) * texture2D(u_map, v_uv);\n                    }\n            `\n    };\n    geometry = new THREE.SphereGeometry(options.radius, options.segments, options.segments);\n    material = new THREE.ShaderMaterial({\n        uniforms: {\n            u_radius: {\n                value: options.radius\n            },\n            u_factor: {\n                type: 'f',\n                value: options.factor\n            },\n            u_map: {\n                value: loader.load(options.map)\n            },\n            u_bump: {\n                value: loader.load(options.bump)\n            },\n            u_color: {\n                value: new THREE.Color('rgb(255, 255, 255)')\n            },\n        },\n        transparent: true,\n        vertexShader: earthShader.vertexShader,\n        fragmentShader: earthShader.fragmentShader,\n    });\n    mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n}\n\nfunction render() {\n    requestAnimationFrame(render);\n\n    let time = clock.getDelta();\n    const delta = Math.min(time, FRAME_INTERVAL);\n    dt += time;\n\n    if (dt > FRAME_INTERVAL) {\n        controller.update();\n        stats.update();\n        renderer.render(scene, camera);\n    }\n\n    dt %= FRAME_INTERVAL;\n}\n\nfunction init() {\n    initThree();\n    initScene();\n}"],"names":["$e6cd41b7816fa07a$var$renderer","$e6cd41b7816fa07a$var$camera","$e6cd41b7816fa07a$var$controller","$e6cd41b7816fa07a$var$scene","$e6cd41b7816fa07a$var$loader","$e6cd41b7816fa07a$var$geometry","$e6cd41b7816fa07a$var$material","$e6cd41b7816fa07a$var$mesh","$e6cd41b7816fa07a$var$clock","$e6cd41b7816fa07a$var$stats","width","height","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$5dbb4439cfbde5f7$export$2e2bcd8739ae039","set","s","enumerable","configurable","$5dbb4439cfbde5f7$var$Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","$jw0R5","$2sw9m","$7DqNw","$82VHk","$e6cd41b7816fa07a$var$assetUrl","$2Tb7o","getAssetURL","$e6cd41b7816fa07a$var$options","radius","segments","factor","map","bump","$e6cd41b7816fa07a$var$FRAME_INTERVAL","$e6cd41b7816fa07a$var$dt","innerWidth","innerHeight","WebGLRenderer","antialias","setSize","setClearColor","body","PerspectiveCamera","position","up","OrbitControls","target","Vector3","TextureLoader","$e6cd41b7816fa07a$var$gui","GUI","add","onChange","e","uniforms","u_factor","Clock","default","windwoWidth","windowHeight","aspect","updateProjectionMatrix","$e6cd41b7816fa07a$var$initScene","Scene","ambientLight","AmbientLight","directionLight","DirectionalLight","intensity","earthShader","vertexShader","fragmentShader","SphereGeometry","ShaderMaterial","u_radius","type","u_map","load","u_bump","u_color","Color","transparent","Mesh","$e6cd41b7816fa07a$var$render","requestAnimationFrame","getDelta","render"],"version":3,"file":"distortHighMap.6a5f9787.js.map"}